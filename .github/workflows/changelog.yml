name: Changelog
on:
  workflow_dispatch:
    inputs:
      ECC_BRANCH:
        description: 'A branch to use when cloning https://github.com/epam/syndicate-rule-engine'
        default: 'develop'
        required: false
        type: string
      ECC_ACTIONS_BRANCH:
        description: 'A branch to use when cloning git.epam.com/epmc-sec/cloudlab/cloud_custodian/ecc-actions'
        default: 'main'
        required: false
        type: string
  push:
    tags:
      - "v*.*"

jobs:
  github_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout ecc-actions
        run: git clone -b ${{ inputs.ECC_ACTIONS_BRANCH || 'main' }}  "https://git:$PROJECT_TOKEN@git.epam.com/epmc-sec/cloudlab/cloud_custodian/ecc-actions.git" ecc-actions
        env:
          PROJECT_TOKEN: ${{ secrets.ECC_CHANGELOG_ACTION }}

      - name: Create wiki
        uses: ./ecc-actions/generate-list-of-rules

      - name: Release action
        uses: ./ecc-actions/release-rulepack-action
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

  ruleset_release_qa:
    name: ruleset_release_qa
    runs-on: ubuntu-latest
    if: (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main') && github.event_name != 'schedule'
    steps:
      - name: Checkout ecc-actions
        run: git clone -b ${{ inputs.ECC_ACTIONS_BRANCH || 'main' }} "https://git:$PROJECT_TOKEN@git.epam.com/epmc-sec/cloudlab/cloud_custodian/ecc-actions.git" ecc-actions
        env:
          PROJECT_TOKEN: ${{ secrets.ECC_CHANGELOG_ACTION }}
      - name: Release ruleset on QA
        uses: ./ecc-actions/release-ruleset-action
        if: github.ref == 'refs/heads/main'
        env:
          C7N_CREDS: ${{ secrets.C7N_CREDS }}
          C7N_ENV: QA
        with:
          ecc_branch: ${{ inputs.ECC_BRANCH || 'develop' }}


  ruleset_release_prod:
    name: ruleset_release_prod
    runs-on: ubuntu-latest
    needs: [github_release]
    if: (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main') && github.event_name != 'schedule'
    steps:
      - name: Checkout ecc-actions
        run: git clone -b ${{ inputs.ECC_ACTIONS_BRANCH || 'main' }} "https://git:$PROJECT_TOKEN@git.epam.com/epmc-sec/cloudlab/cloud_custodian/ecc-actions.git" ecc-actions
        env:
          PROJECT_TOKEN: ${{ secrets.ECC_CHANGELOG_ACTION }}
      - name: Release ruleset on PROD
        uses: ./ecc-actions/release-ruleset-action
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          C7N_CREDS: ${{ secrets.C7N_CREDS }}
          C7N_ENV: PROD
        with:
          ecc_branch: ${{ inputs.ECC_BRANCH || 'develop' }}
